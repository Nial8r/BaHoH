<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//global game vars
global.t = 0;
global.att_selected = 8;

dice_reset();
moved_reset();

for(i = 0; i &lt; 31; i+=1)
{
    for(j = 0; j &lt; 31; j+=1)
        global.rest[i,j] = -1;
}

place_room(room_enterance,17,17);
place_room(room_foyer,16,17);
place_room(room_gstairs,15,17);

place_player(player_doctor,17,17);
global.att_selected = player.att_might;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//highlight_check();
if(mouse_check_button_pressed(mb_left))
{
    //show_message("1");
    dx = floor(mouse_x/200);
    dy = floor(mouse_y/200);
    if(ableto_move(dx,dy))
    {
        move_player(dx,dy);
        //show_message("2");
    }
}



if(mouse_inbounds2(1050*(1+(.0525*((view_wview-1280)/68))),600*(1+(.055*((view_hview-720)/40))),1200*(1+(.0525*((view_wview-1280)/68))),650*(1+(.055*((view_hview-720)/40))))&amp;&amp;mouse_check_button_pressed(mb_left))
{
    player_turn_end();
}

move_screen();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw GUI
draw_set_color(make_color_rgb(76,55,11));
draw_rectangle(960,0,1280,720,0);

if(instance_exists(player))
{
    //draw char name
    draw_set_font(fnt_title);
    draw_set_color(c_black);
    draw_text(1020,20,player.p_name);
    
    //draw the stats
    draw_set_font(fnt_bold);
    draw_text(1000,100,"Might: "+string(player.att_might));
    draw_text(1100,100,"Speed: "+string(player.att_speed));
    draw_text(1000,150,"Sanity: "+string(player.att_sanity));
    draw_text(1100,150,"Knowledge: "+string(player.att_knowledge));
    
    //draw the dice
    draw_die(0);
    draw_die(1);
    draw_die(2);
    draw_die(3);
    draw_die(4);
    draw_die(5);
    draw_die(6);
    draw_die(7);
    
    draw_text(1170,300,"Moves Left: "+string(player.moves_left));
    
    //check if mouse hover on stat &amp; change dice to clicked
    stat_check(998,100,1061,118,player.att_might);
    stat_check(1098,100,1167,118,player.att_speed);
    stat_check(998,150,1068,168,player.att_sanity);
    stat_check(1098,150,1207,168,player.att_knowledge);
    
    draw_set_color(c_red);
    draw_rectangle(1050,600,1200,650,0);
    draw_set_font(fnt_bold);
    draw_set_color(c_black);
    draw_text(1090,618,"End Turn");

}

//draw debug
draw_set_font(font0);
draw_set_color(c_black);
draw_text(965,702,string(mouse_x-view_xview)+", "+string(mouse_y-view_yview)+", "+string(view_hview)+", "+string(view_wview)+", "+string(player.turn));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//dx = floor(mouse_x/200);
//dy = floor(mouse_y/200);
//draw_text(mouse_x,mouse_y+20,string(global.rest[dx,dy])+" "+string(get_room(dx,dy))+"#"+string(space_has_room(dx,dy)));

highlight_check();
draw_set_color(c_black);
draw_set_font(font0);
draw_text(mouse_x+10,mouse_y+15,string(dx)+" "+string(dy));

/*if(!space_has_room(dx,dy))
{
    draw_set_color(c_green);
}
else if(can_move(player,get_room(dx,dy)))
{
    draw_set_color(c_aqua);
}
else
{
    draw_set_color(c_red);
}
if(player.turn)
{
    draw_set_alpha(.35);
    draw_rectangle(dx*200,dy*200,((dx+1)*200)-1,((dy+1)*200)-1,0);
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(player.turn)dice_roll();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>player_turn_start();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
